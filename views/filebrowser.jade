doctype 5
html(ng-app='gear-browser')
    head
        title= title
        link(rel='stylesheet', href='/stylesheets/bootstrap.min.css')
        link(rel='stylesheet', href='/stylesheets/style.css')
        script(src='//cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.5/angular.min.js')
        script(src='//code.angularjs.org/1.0.0rc10/angular-cookies-1.0.0rc10.js')
    body
        .menu(ng-controller="menuCtrl")
            a.top-link(href='#', ng-click='logout()') Logout
            a.top-link(href='/') Main Site
        span(id='header')
            img(height='160', width='289', src='/images/gearlogo.jpg')
        .filebrowser(ng-controller='FilesCtrl')
            h3 File Browser
            .files
                ol.breadcrumb
                    li(ng-repeat="segment in segments", ng-class='$last ? "active" : ""')
                        a(href="#", ng-click="navigate(segment.path)") {{ segment.name }}
                table.table.table-hover
                    thead
                        tr
                            th
                            th File Name
                            th File Type
                            th File Size (bytes)
                            th Actions
                    tbody
                        tr(ng-repeat='file in files')
                            td
                                span(ng-class='file.isDirectory ? "glyphicon glyphicon-folder-open": "glyphicon glyphicon-file"')
                            td
                                a.btn(href="#", ng-click='navigate(path + "/" + file.name)', ng-class='!file.isDirectory ? "disabled": ""') {{ file.name }}
                            td {{ file.isDirectory ? 'Directory' : file.mime }}
                            td {{ file.size }}
                            td
                                .btn-group()
                                    button.btn.btn-default.dropdown-toggle(data-toggle="dropdown") Actions
                                        span.caret
                                    ul.dropdown-menu(role="menu")
                                        li

                                            // files
                                            a(ng-href="{{file.href}}", ng-show="!file.isDirectory") Download
                                            a(ng-show="!file.isDirectory") Upload New Version
                                            a(ng-show="!file.isDirectory") Move

                                            // directory
                                            a(href='#modal-permissions', role='button', data-toggle='modal', ng-show="file.isDirectory") Permissions
            #modal-permissions.modal.fade(tabindex='-1', role='dialog', aria-labelledby='myModalLabelPermissions', aria-hidden='true', ng-controller='permissionsCtrl')
                .modal-dialog
                    .modal-content
                        .modal-header
                            button.close(type='button', data-dismiss='modal', aria-hidden='true') Ã—
                            h4#myModalLabelPermissions Edit Permissions
                        .modal-body
                            table.table.table-hover
                                thead
                                    tr
                                        th username
                                        th Read
                                        th Write
                                tbody
                                    tr(ng-repeat='user in users')
                                        td
                                            {{ user.username }}
                                        td
                                            input(type="checkbox", ng-model="permissions[user.username].read", ng-click="updatePermissions(permissions)")
                                        td
                                            input(type="checkbox", ng-model="permissions[user.username].write", ng-click="updatePermissions(permissions)")
                        .modal-footer
                            button.btn.btn-default(type='button', data-dismiss='modal', aria-hidden='true') Done

        script(src='//cdnjs.cloudflare.com/ajax/libs/jquery/2.0.2/jquery.min.js')
        script(src='//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.5.2/underscore-min.js')
        script(src='//cdnjs.cloudflare.com/ajax/libs/underscore.string/2.3.3/underscore.string.min.js')
        script(src='/javascripts/bootstrap.min.js')
        script
            _.mixin(_.str.exports());
            _.mixin({
                combinations: function(arr, accum) {
                    if(!accum) {
                        accum = [arr[0]];
                        return _.combinations(_(arr).rest(1), accum);
                    }
                    if(_(arr).isEmpty()) return accum;
                    accum.push( _.union(_(accum).last(1)[0], arr[0]) );
                    return _.combinations(_(arr).rest(1), accum);
                }
            });
            var menuCtrl = function($scope, $cookies) {
                $scope.logout = function() {
                    $cookies.authtoken = 'null';
                    window.location.reload();
                };
            };
            var myApp = angular.module('gear-browser', ['ngCookies']);
            myApp.controller('FilesCtrl', ['$scope', '$http', function($scope, $http) {
                $scope.location = { path: '/' };
                $scope.segments = [ { name: 'Home', path: '/' } ];
                $scope.navigate = function(newPath) {
                    $scope.location.path = newPath;
                    $scope.segments = [ { name: 'Home', path: '/' } ];
                    $scope.segments = _.union($scope.segments, _($scope.path).chain().words('/').combinations().map(function(arr) {
                        return {
                            path: _(arr).isArray() ? '/' + arr.join('/') : '/' + arr,
                            name: _(arr).isArray() ? _(arr).last(1)[0] : arr
                        }
                    }).value());
                    $scope.fetchFiles();
                };
                $scope.fetchFiles = function() {
                    $http({method: 'GET', url: '/@api/files/list', params: {path: encodeURIComponent($scope.location.path)}}).success(function(data) {
                        $scope.files = data;
                    }).error(function(data) {
                        //TODO
                    });
                }
                $scope.fetchFiles();
            }]);
            myApp.controller('permissionsCtrl', ['$scope', '$http', function($scope, $http) {
                $scope.updatePermissions = function(permissions) {
                    $http({ method: 'POST', url: '/@api/files/permissions', data: permissions, params: { path: encodeURIComponent($scope.location.path) }}).error(function(err) {
                        //TODO
                    });
                },

                //TODO: execute these queries simultaneously
                //TODO: get path from files scope
                $http({method: 'GET', url: '/@api/users'}).success(function(users) {
                    $http({method: 'GET', url: '/@api/files/permissions', params: { path: encodeURIComponent($scope.location.path) } }).success(function(permissions) {
                        $scope.users = users;
                        $scope.permissions = permissions;
                        _(users).each(function(u) {
                            $scope.permissions[u.username] = $scope.permissions[u.username] || {};
                        });
                    }).error(function(err) {
                        //TODO
                    });
                }).error(function(data) {
                    //TODO
                });
            }]);